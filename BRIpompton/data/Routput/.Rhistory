count(mtcars, 'gear')
count(Fees)
count(BarcodeID, Fees)
count(c(BarcodeID, Fees))
count(toy.df(c('BarcodeID', 'Fees'))
library(plyr)
> count(mtcars, 'gear')
toy.df %>% summarise(total_fees = mean(Fees)
msleep %>%
summarise(avg_sleep = sum(sleep_total))
count(toy.df(c(BarcodeID, Fees))
library(plyr)
> count(mtcars, 'gear')
toy.df %>% summarise(total_fees = mean(Fees)
msleep %>%
summarise(avg_sleep = sum(sleep_total))
count(toy.df(BarcodeID, Fees))
detach("package:dplyr", unload=TRUE)
count(toy.df, Fees)
count(toy.df, 'Fees')
count(toy.df, 'BarcodeID')
count(toy.df, c('BarcodeID', 'Fees'))
count(toy.df, c('BarcodeID', 'User'))
count(toy.df, c('Fees', 'User'))
count(toy.df(User, Fees))
count(toy.df,c(User, Fees))
count(toy.df,c('User', 'Fees'))
count(toy.df,c'User')
count(toy.df,'User')
count(toy.df,'MovieTitle')
library(dplyr)
toy.df %>%
group_by(User) %>%
summarise(Fees = sum(Fees))
toy.df %>%
group_by(User, MovieTitle) %>%
summarise(Fees = sum(Fees))
toy.df[, sum(Fees), by = User]
library(data.table)
toy.df[, sum(Fees), by = User]
toy.df[, sum(Fees)]
toy.df[,sum(Fees), by = ]
toy.df[,list((Fees=sum(Fees)), by=User]
data[, sum(Frequency), by = Category]
data[,list(Frequency=sum(Frequency)),by=Category]
toy.df[,list((Fees=sum(Fees)), by=User]
data[, sum(Frequency), by = Category]
data[,list(Frequency=sum(Frequency)),by=Category]
toy.df[,list(Fees=sum(Fees)), by=User]
data = data.frame(Category=c("First","First","First","Second","Third", "Third", "Second"),
Frequency=c(10,15,5,2,14,20,3))
data[, sum(Frequency), by = Category]
data[,list(Frequency=sum(Frequency)),by=Category]
data[, lapply(.SD, sum), by = Category]
View(data)
data[, lapply(.SD, sum, na.rm=TRUE), by=category, .SDcols=c("a", "c", "z") ]
data[, lapply(.SD, sum, na.rm=TRUE), by=Category, .SDcols=c("First", "Second", "Third") ]
data[, lapply(.SD, sum, na.rm=TRUE), by=Category, .SDcols=c("Frequency") ]
data[, lapply(.SD, sum, na.rm=TRUE), by=Frequency, .SDcols=c("Category") ]
a = data.table(index=1:5,a=rnorm(5,10),b=rnorm(5,10),z=rnorm(5,10))
b = data.table(index=6:10,a=rnorm(5,10),b=rnorm(5,10),c=rnorm(5,10),d=rnorm(5,10))
dt = merge(a,b,by=intersect(names(a),names(b)),all=T)
dt$category = sample(letters[1:3],10,replace=T)
dt[, lapply(.SD, sum, na.rm=TRUE), by=category, .SDcols=c("a", "c", "z") ]
data[, lapply(.SD, sum, na.rm=TRUE), by=Frequency, .SDcols=c("Category") ]
View(dt)
dt[, lapply(.SD, sum, na.rm=TRUE), by=Category, .SDcols=c("Frequency") ]
data[, lapply(.SD, sum, na.rm=TRUE), by=Category, .SDcols=c("Frequency") ]
toy.df[,sum(Fees), by=User]
toy.df[,sum(Fees),by=User]
toy.df[,sum(Fees),by=(User)]
toy.df[,sum(Fees),by=list(User)]
toy.df[,lapply(.SD,sum) by=User]
toy.df[,lapply(.SD,sum), by=User]
detach("package:dplyr", unload=TRUE)
library(data.table)
data[, sum(Frequency), by = Category]
install.packages('xml2')
install.packages('purrr')
install.packages("purrr")
library(xml2)
library(purrr)
doc <- xmlParse(http://v4.boldsystems.org/index.php/API_Public/combined?taxon=Megaloptera)
doc <- xmlParse("http://v4.boldsystems.org/index.php/API_Public/combined?taxon=Megaloptera")
x <- read_xml("http://v4.boldsystems.org/index.php/API_Public/combined?taxon=Megaloptera")
x_list <- as_list(x)
x_df <- x_list %>% map('record') %>% flatten() %>% map_df(flatten)
x %>% xml_find_all('//record') %>% map(as_list) %>% map_df(flatten)
x %>% xml_find_all('//bin_uri') %>% map(as_list) %>% map_df(flatten)
x %>% xml_find_all('//record_id') %>% map(as_list) %>% map_df(flatten)
x %>% xml_find_all('//record') %>% map(as_list) %>% map_df(flatten)
xml_name(x)
xml_children(x)
baz <- xml_find_all(x, ".//phylum")
baz
xml_path(baz)
xml_attr(baz, "name")
xml_attr(baz, "taxon")
xml_attr(baz, "taxID")
baz <- xml_find_all(x, ".//taxonomy")
baz
xml_path(baz)
xml_attr(baz, "taxonomy")
xml_attr(baz, "phylum")
xml_attr(baz, "name")
y <- read_xml("<foo> <bar> text <baz/> </bar> </foo>")
y
x
y
xml_name(y)
xml_children(y)
xml_text(y)
xml_text(x)
xml_node(x)
?xml_node()
?xml_text()
xml_text(xml_find_all(x, "//x"))
xml_text(xml_find_all(x, "//phylum"))
xml_text(xml_find_all(x, "//class"))
phylum_name <- xml_text(xml_find_all(x, "//class"))
species_name <- xml_text(xml_find_all(x, "//species"))
xml_text(xml_find_all(x, "//species"))
phylum_name <- xml_text(xml_find_all(x, "//name"))
xml_text(xml_find_all(x, "//name"))
xml_children(x)
install.packages('XML')
library(XML)
xml.url <- “http://v4.boldsystems.org/index.php/API_Public/combined?taxon=Megaloptera”
xml.url <- "http://v4.boldsystems.org/index.php/API_Public/combined?taxon=Megaloptera"
xmlfile <- xmlTreeParse(xml.url)
class(xmlfile)
xmltop = xmlRoot(xmlfile)
print(xmltop)[1:2]
print(xmltop)[1:1]
xmlTree(tag = record)
xmlTree(tag = "record")
xmlTree(tag = "record", doc = xmlfile)
boldcat <- xmlSApply(xmltop, function(x) xmlSApply(x, xmlValue))
bold_df <- data.frame(t(boldcat),row.names=NULL)
View(bold_df)
bold_df[1:5,1:4]
bold.df <- as.data.frame(boldcat)
bold.df <- data.frame(boldcat)
bold.df <- data.frame(t(boldcat))
View(bold.df)
tbolddf <- t(bold_df)
View(tbolddf)
rm(bold_df, boldcat, xmlfile, xmltop)
rm(bold.df)
strsplit(tbolddf, split = ',')
bold_df <- data.frame(tbolddf)
View(bold_df)
rm(tbolddf)
big.df <- data.frame(do.call('rbind', strsplit(as.character(bold_df$tbolddf),'|',fixed=TRUE)))
big.df <- data.frame(do.call('rbind', strsplit(as.character(bold_df$tbolddf),',',fixed=TRUE)))
colnames(bold_df) <- "col1"
big.df <- cbind(bold_df, read.table(text = as.character(bold_df$col1), sep = ","))
bold_df[1,1]
library(bold)
install.packages("bold")
detach("package:XML", unload=TRUE)
library(bold)
bold_megaloptera <- bold_seqspec(taxon='Megaloptera', sepfasta=TRUE)
bold_megaloptera$fasta[1:2]
rm(xml.url, big.df, bold_df)
processid <- bold_megaloptera$data$processid
bin_uri <- bold_megaloptera$data$bin_uri
phylum_name <- bold_megaloptera$data$phylum_name
class_name <- bold_megaloptera$data$class_name
order_name <- bold_megaloptera$data$order_name
family_name <- bold_megaloptera$data$family_name
genus_name <- bold_megaloptera$data$genus_name
species_name <- bold_megaloptera$data$species_name
lat <- bold_megaloptera$data$lat
lon <- bold_megaloptera$data$lon
country <- bold_megaloptera$data$country
image_urls <- bold_megaloptera$data$image_urls
genbank_accession <- bold_megaloptera$data$genbank_accession
fasta <- bold_megaloptera$fasta
my.df <- data.frame(processid, bin_uri, phylum_name, class_name, order_name, family_name, genus_name, species_name,
lat, lon, country, image_urls, genbank_accession, fasta)
View(my.df)
fasta_seq <- bold_megaloptera$fasta
my.df <- data.frame(processid, bin_uri, phylum_name, class_name, order_name, family_name, genus_name, species_name,
lat, lon, country, image_urls, genbank_accession, fasta_seq)
fasta_seq <- bold_megaloptera$fasta[1:1769]
my.df <- data.frame(processid, bin_uri, phylum_name, class_name, order_name, family_name, genus_name, species_name,
lat, lon, country, image_urls, genbank_accession, fasta_seq)
View(my.df)
fasta_seq <- bold_megaloptera$fasta[1:1]
ra <- c(1,1,0,0,0,0)
rb <- c(1,0,1,0,0,0)
rc <- c(0,0,1,1,1,0)
rd <- c(0,0,1,0,0,0)
re <- c(0,0,0,0,0,1)
mat <- rbind(ra,rb,rc,rd,re)
View(mat)
colnames(mat) <- c("s1-L1", "s2-L1", "s1-L2", "s2-L2", "s1-L3", "s2-L3")
View(mat)
rownames(mat) <- c("OTU1", "OTU2", "OTU3", "OTU4", "OTU5")
subnames <- c("s1-L1", "s2-L3")
x <- subset(mat, rownames(mat) %in% subnames)
View(x)
x <- subset(mat, colnames(mat) %in% subnames)
x <- subset(mat, colnames(mat) %in% subnames)
rm(x)
colnames(mat) <- c("s1-G1", "s2-G1", "s3-G2", "s4-G2", "s5-G3", "s6-G3")
rownames(mat) <- c("OTU1", "OTU2", "OTU3", "OTU4", "OTU5")
mat
ra <- c(1,2,0,0,0,0)
rb <- c(3,0,4,0,0,0)
rc <- c(0,0,5,6,7,0)
rd <- c(0,0,8,0,0,0)
re <- c(0,0,0,0,0,99)
mat <- rbind(ra,rb,rc,rd,re)
colnames(mat) <- c("s1-G1", "s2-G1", "s3-G2", "s4-G2", "s5-G3", "s6-G3")
rownames(mat) <- c("OTU1", "OTU2", "OTU3", "OTU4", "OTU5")
dat.wide <- data.table(mat)
library(data.table)
dat.wide <- data.table(mat)
View(dat.wide)
myrownames <- rownames(mat)
dat.wide[, OTU := myrownames]
View(dat.wide)
dat.long <- melt(dat.wide)
View(dat.long)
dat.long[, c("sample","group") := tstrsplit(variable, split="-")]
dat.long[, variable := NULL]
View(dat.long)
unique.OTUs <- dat.long[, list(N=sum(value)), by=list(group, OTU)][, list(Ngroups=sum(N>0)), by=OTU][Ngroups==1]$OTU
dat.wide[OTU %in% unique.OTUs]
df_dupd <- dat.wide[! (OTU %in% unique.OTUs)]
View(df_dupd)
library(data.table)
tmpfilt2.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/Routput/FilteredOTUs.csv', header = TRUE)
meta.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/OahuBird_metadata.csv', header = TRUE)
View(meta.df)
meta.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/OahuBird_metadata.csv', header = TRUE)
View(meta.df)
meta.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/OahuBird_metadata.csv', header = TRUE)
View(meta.df)
meta.df$SampleID <- paste("OahuBird-", substr(meta.df$seqID, 4, 6), sep = "")
meta.df <- meta.df[,c(4:9)]
colnames(meta.df) <- c("SamplingDate", "BirdSpecies", "Source", "VegNum", "SampleType", "SampleID")
master.df <- merge(tmpfilt2.df, meta.df)
meta.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/OahuBird_metadata.csv', header = TRUE)
meta.df$SampleID <- paste("OahuBird.", substr(meta.df$seqID, 4, 6), sep = "")
meta.df <- meta.df[,c(4:9)]
colnames(meta.df) <- c("SamplingDate", "BirdSpecies", "Source", "VegNum", "SampleType", "SampleID")
master.df <- merge(tmpfilt2.df, meta.df)
View(meta.df)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
View(tc3.df)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
View(tc3.df)
tmp.df <- subset(tc3.df, POOL != "x")
View(tmp.df)
str(tmp.df)
x <- tmp.df[with(tmp.df, order(uLDNAtoPool)),]
View(x)
source('~/.active-rstudio-document', echo=TRUE)
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
length(tmp.df$sampleID)
nrow(tmp.df)
highnum <- (nrow(tmp.df))/4
numlist <- range(1,highnum)
numlist <- range(1:highnum)
numlist <- seq(1, highnum, length.out=5)
numlist <- seq(1, highnum, length.out=47)
b <- seq(1, (nrow(tmp.df))/4, length.out=47)
rm(b, highnumb)
rm(b, highnum)
source('~/.active-rstudio-document')
rev(numlist)
revnumlist <- rev(numlist)
x <- paste(numlist, revnumlist)
x <- paste(numlist, revnumlist, sep = " ")
x <- c(numlist, revnumlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
View(x)
colnames(df.sum) <- c("poolGroup", "mean")
df.sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
colnames(df.sum) <- c("poolGroup", "mean")
df.sum$sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
View(df.sum)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
df.sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
colnames(df.sum) <- c("poolGroup", "mean")
View(df.sum)
df.sum$sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
df.sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
colnames(df.sum) <- c("poolGroup", "mean")
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
df.sum$sum <- x
rm(x)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
df.sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
colnames(df.sum) <- c("poolGroup", "mean")
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
str(x)
x$Group.1 <- NULL
str(x)
x
df.sum$sum <- x
View(df.sum)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
df.sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
## find sum per group
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
df.sum$sum <- x
rm(x)
colnames(df.sum) <- c("poolGroup", "mean", "sum")
View(df.sum)
View(df.sum)
View(df.sum)
View(df.sum)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
df.sum <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
## find sum per group
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
View(x)
x$Group.1 <- NULL
df.sum$sum <- x
rm(x)
colnames(df.sum) <- c("poolGroup", "mean", "sum")
View(df.sum)
colnames(df.sum) <- c("poolGroup", "mean", "sum")
View(df.sum)
str(df.sum)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
## find sum per group
y <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
summary.df <- merge(x,y)
View(x)
View(y)
View(x)
View(y)
View(x)
colnames(x) <- c("poolGroup", "mean")
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
## find average per group
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
colnames(x) <- c("poolGroup", "mean")
## find sum per group
y <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
colnames(y) <- c("poolGroup", "sum")
summary.df <- merge(x,y)
View(summary.df)
tc3.df <- read.csv('https://raw.githubusercontent.com/devonorourke/batgenomes/master/data/tcap3poolvols.csv')
tmp.df <- subset(tc3.df, POOL != "x")
tmp.df <- tmp.df[with(tmp.df, order(-uLDNAtoPool)),]
numlist <- seq(1, (nrow(tmp.df))/4, length.out=47)
revnumlist <- rev(numlist)
ranklist <- c(numlist, numlist, revnumlist, revnumlist)
tmp.df$poolGroup <- ranklist
rm(numlist, ranklist, revnumlist)
## find average per group
x <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), mean)
colnames(x) <- c("poolGroup", "mean")
## find sum per group
y <- aggregate(tmp.df$uLDNAtoPool, list(tmp.df$poolGroup), sum)
colnames(y) <- c("poolGroup", "sum")
summary.df <- merge(x,y)
rm(x,y)
View(tc3.df)
setwd("~/Repos/guano/BRIpompton/")
h_otutable.df <- read.csv('https://raw.githubusercontent.com/devonorourke/guano/master/BRIpompton/data/amptk/Pompton_h.otu_table.taxonomy.txt', sep = '\t')
View(h_otutable.df)
colnames(h_otutable.df)[1] <- ""
h_otutable.df[h_otutable.df == 0] <- NA       # we loaded a binary matrix; all zero's indicate absence of data, all 1's indicate presence of an amplicon
library(reshape2)
tmp.df <- melt(h_otutable.df)           # converting from wide format to long format (useful for plots)
rm(h_otutable.df)
colnames(tmp.df) <- c("OTUid", "Taxonomy", "SampleID", "CountReads")
tmp.df <- tmp.df[complete.cases(tmp.df),]
tmp.df <- separate(data = tmp.df,
col = Taxonomy,
into = c("TaxMethod", "AlignScore", "BOLDid", "kingdom_name", "phylum_name", "class_name",
"order_name", "family_name", "genus_name", "species_name"),
sep = "\\;|,|\\|")
library(tidyr)
tmp.df <- separate(data = tmp.df,
col = Taxonomy,
into = c("TaxMethod", "AlignScore", "BOLDid", "kingdom_name", "phylum_name", "class_name",
"order_name", "family_name", "genus_name", "species_name"),
sep = "\\;|,|\\|")
View(tmp.df)
tmp.df$kingdom_name <- sub("k:", "", tmp.df$kingdom_name)
tmp.df$phylum_name <- sub("p:", "", tmp.df$phylum_name)
tmp.df$class_name <- sub("c:", "", tmp.df$class_name)
tmp.df$order_name <- sub("o:", "", tmp.df$order_name)
tmp.df$family_name <- sub("f:", "", tmp.df$family_name)
tmp.df$genus_name <- sub("g:", "", tmp.df$genus_name)
tmp.df$species_name <- sub("s:", "", tmp.df$species_name)
h_otutable.df <- read.csv('https://raw.githubusercontent.com/devonorourke/guano/master/BRIpompton/data/amptk/Pompton_h.otu_table.taxonomy.txt', sep = '\t')
colnames(h_otutable.df)[1] <- ""
h_otutable.df[h_otutable.df == 0] <- NA       # we loaded a binary matrix; all zero's indicate absence of data, all 1's indicate presence of an amplicon
tmp.df <- melt(h_otutable.df)           # converting from wide format to long format (useful for plots)
rm(h_otutable.df)
colnames(tmp.df) <- c("OTUid", "Taxonomy", "SampleID", "CountReads")
tmp.df <- tmp.df[complete.cases(tmp.df),]
tmp.df <- separate(data = tmp.df,
col = Taxonomy,
into = c("TaxMethod", "AlignScore", "BOLDid", "kingdom_name", "phylum_name", "class_name",
"order_name", "family_name", "genus_name", "species_name"),
sep = "\\;|,|\\|")
## reformat taxonomy columns to discard given prefix
tmp.df$kingdom_name <- sub("k:", "", tmp.df$kingdom_name)
tmp.df$phylum_name <- sub("p:", "", tmp.df$phylum_name)
tmp.df$class_name <- sub("c:", "", tmp.df$class_name)
tmp.df$order_name <- sub("o:", "", tmp.df$order_name)
tmp.df$family_name <- sub("f:", "", tmp.df$family_name)
tmp.df$genus_name <- sub("g:", "", tmp.df$genus_name)
tmp.df$species_name <- sub("s:", "", tmp.df$species_name)
View(tmp.df)
setwd("~/Repos/guano/BRIpompton/data/Routput/")
write.csv(tmp.df, "Pompton_rawOTUtable.csv", quote = FALSE, row.names = FALSE)
oahu.df <- read.csv('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/Routput/master.csv', header = TRUE)
nau.df <- read.csv('https://raw.githubusercontent.com/devonorourke/guano/master/NAUsupp/masterdf.csv', header = TRUE)
View(nau.df)
View(oahu.df)
colnames(nau.df)[3] <- c("BOLDalt")
tmp.df$BOLDalt <- tmp.df$BOLDid
tmp.df <- separate(tmp.df, col = BOLDalt, into = c("BOLDalt", "delete"), sep = "\\.")
tmp.df$delete <- NULL
oahu.df$BOLDalt <- oahu.df$BOLDid
oahu.df <- separate(oahu.df, col = BOLDalt, into = c("BOLDalt", "delete"), sep = "\\.")
oahu.df$delete <- NULL
string <- unique(c(oahu.df$BOLDalt, nau.df$BOLDalt))
find.list <- list("None", "UTAX", "SINTAX", "CFMR:IM4")
find.string <- paste(unlist(find.list), collapse = "|")
tmpx.list <- gsub(find.string, replacement = "", x = string)
allmatch.list <- tmpx.list[tmpx.list != ""]
rm(string, find.list, find.string, tmpx.list)
ProjectMatches.df <- tmp.df[tmp.df$BOLDalt %in% allmatch.list,]
sum(ProjectMatches.df$CountReads)    # 5,295,342 ... a huge number; represents about 2/5 of our overall data (13,950,987 reads)
length(unique(ProjectMatches.df$OTUid))    # 501 unique matches identified... (our data originally had 1416 OTUs)
tmp_counts <- ProjectMatches.df %>%
group_by(BOLDalt) %>%
count()
tmp_sums <- ProjectMatches.df %>%
group_by(BOLDalt) %>%
summarise(TotalCounts = sum(CountReads))
Match_summary <- merge(tmp_counts, tmp_sums)
rm(tmp_counts, tmp_sums)
library(dplyr)
library(ggplot2)
tmp_counts <- ProjectMatches.df %>%
group_by(BOLDalt) %>%
count()
tmp_sums <- ProjectMatches.df %>%
group_by(BOLDalt) %>%
summarise(TotalCounts = sum(CountReads))
Match_summary <- merge(tmp_counts, tmp_sums)
rm(tmp_counts, tmp_sums)
View(Match_summary)
x <- tmp.df[,c(1,14)]         ## grab just the OTUid and BOLDalt vectors from the `tmp.df` object
y <- x[!duplicated(x[1:2]),]  ## obtain only unique combinations of OTUid and BOLDids (note there can be the same BOLDid for multiple OTUid's)
z <- merge(Match_summary, y)  ## paste these unique OTUid's for every BOLDid in the `Match_summary` object to identify trends in OTU read abundance and frequency of detection
View(z)
