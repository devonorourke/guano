oBSTbird <- filter(freqOrders, SampleType == "Bird")
birdobs <- sum(oBSTbird$freq) ## 2254 observations
oBSTbird$percObs <- (oBSTbird$freq)/birdobs*100
oBSTveg <- filter(freqOrders, SampleType == "Veg")
vegobs<- sum(oBSTveg$freq) ## 1476 observations
oBSTveg$percObs <- (oBSTveg$freq)/vegobs*100
freqOrders <- rbind(oBSTbird, oBSTveg)
rm(oBSTbird, oBSTveg)
rm(oBSTbird, oBSTveg, birdobs, vegobs)
length(unique(freqOrders$order_name))  # we have 28 unique things to shade, including the 'NA' values
tol28rainbow= c("#771155", "#AA4488", "#CC99BB", "#f7e9f7",
"#114477", "#4477AA", "#77AADD", "#e2effd",
"#117777", "#44AAAA", "#77CCCC", "#d9f0f0",
"#117744", "#44AA77", "#88CCAA", "#e0f0e6",
"#777711", "#AAAA44", "#DDDD77", "#eaeedf",
"#774411", "#AA7744", "#DDAA77", "#f6ebdd",
"#771122", "#AA4455", "#DD7788", "#fee8e3")
library(ggplot2)
ggplot(freqOrders, aes(x = factor(SampleType), y = percObs, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
labs(title = "Relative taxonomic Orders detected by avian guano or vegetative sampling methods",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Sample Type",
y = "Percent taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
detach("package:dplyr", unload=TRUE)
library(plyr)
freq_bySpeciesOrders <- count(plot.df, vars = c("SampleType", "order_name", "SpeciesName", "Endemism"))
View(plot.df)
freq_bySpeciesOrders <- count(plot.df, vars = c("SampleType", "order_name", "SampleSpecies", "Endemism"))
library(dplyr)
oBSTbird <- filter(freqOrders, SampleType == "Bird")
rm(freqOrders)
oBSTbird <- filter(freq_bySpeciesOrders, SampleType == "Bird")
length(unique(freqOrders$order_name))  # we have 28 unique things to shade, including the 'NA' values
length(unique(freq_bySpeciesOrders$order_name))  # we have 28 unique things to shade, including the 'NA' values
View(oBSTbird)
oBSTbird <- filter(freq_bySpeciesOrders, SampleType == "Bird", Endemism != "unknown")
length(unique(freq_bySpeciesOrders$order_name))  # we have 28 unique things to shade, including the 'NA' values
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black")
View(oBSTbird)
ggplot(oBSTbird, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black")
ggplot(oBSTbird, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird species' guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Number of times taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType)
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType,  scales = free)
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType,  scales = "free")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType,  scales = "free_x", space = "free")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType,  scales = "free_x")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_segment(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType,  scales = "free_x")
ggplot(freq_bySpeciesOrders, aes(x=factor(SampleSpecies), y=freq, fill = order_name)) +
geom_segment(aes(yend=freq), xend=0)
ggplot(freq_bySpeciesOrders, aes(x=factor(SampleSpecies), y=freq, fill = order_name)) +
geom_segment(aes(yend=freq), xend=0, fill = order_name)
source('~/Repos/guano/OahuBird/docs/OTUanalysis.R', echo=TRUE)
ggplot(freq_bySpeciesOrders, aes(x=factor(SampleSpecies), y=freq, fill = order_name)) +
geom_segment(aes(yend=freq), xend=0) +
facet_wrap(~ Endemism)
ggplot(freq_bySpeciesOrders, aes(x=factor(SampleSpecies), y=freq, fill = order_name)) +
geom_segment(aes(yend=0), xend=freq) +
facet_wrap(~ Endemism)
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType,  scales = "free_x", space = "free")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(1, "lines"))
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird species' guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Number of times taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird specie\'s guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Number of times taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird specie\\'s guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Number of times taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird species guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Number of times taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
detach("package:dplyr", unload=TRUE)
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines"))
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird species guano")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines")) +
labs(title = "Observed detections of taxonomic Orders among Hawaiian bird species guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Number of times taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType + SampleSpecies,  scales = "free_x", space = "free")
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ SampleType + SampleSpecies,  scales = "free_x", space = "free", ncol = 2)
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_wrap(~ SampleType + SampleSpecies,  scales = "free_x", ncol = 2)
ggplot(freq_bySpeciesOrders, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
library(dplyr)
ndemism != "unknown"),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown"),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown", SampleSpecies != c("HAAM", "NOCA")),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
View(freq_bySpeciesOrders)
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown", SampleSpecies != "HAAM"),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown", SampleSpecies != "HAAM"|"NOCA"),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown", SampleSpecies != "HAAM", SampleSpecies != "NOCA"),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
targetdrop <- c("HAAM", "NOCA")
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown", SampleSpecies != targetdrop),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
targetdrop <- c("HAAM", "MELT")
unique(freq_bySpeciesOrders$SampleSpecies)
targetSamples <- c("RBLE", "JABW", "JAWE", "MACR", "NOCA", "OHIA", "vegetation")
rm(targetdrop)
ggplot(data = filter(freq_bySpeciesOrders, Endemism != "unknown" %>% select(targetSamples)),
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM"))
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM" | Endemism == "unknown"))
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM") | Endemism == "unknown")
View(freq_by_SpeciesSub)
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM") | Endemism != "unknown")
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM") | Endemism == "unknown")
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM") & Endemism == "unknown")
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM") & Endemism != "unknown")
ggplot(data = filter(data=freq_by_SpeciesSub,
aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
ggplot(data=freq_by_SpeciesSub, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
freq_by_SpeciesSub <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM") & Endemism != "unknown")
tmp1 <- subset(freq_bySpeciesOrders, SampleSpecies != c("MELT", "HAAM"))
View(tmp1)
str(tmp1)
tmp1 <- subset(freq_bySpeciesOrders, SampleSpecies != "MELT" | "HAAM")
detach("package:dplyr", unload=TRUE)
targetSamples
targetSamples <- c( "RBLE"       "JABW"       "JAWE"       "MACR"       "NOCA"       "OHIA"       "vegetation")
targetSamples <- c( "RBLE","JABW","JAWE","MACR","NOCA","OHIA","vegetation")
tmp1 <- subset(freq_bySpeciesOrders, SampleSpecies !=  %in% targetSamples)
tmp1 <- subset(freq_bySpeciesOrders, SampleSpecies %in% targetSamples)
View(tmp1)
tmp2 <- subset(tmp1, Endemism != "unknown")
ggplot(data=tmp2, aes(x = factor(SampleSpecies), y = freq, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
targetSamples <- c( "RBLE","JABW","JAWE")
tmp1 <- subset(freq_bySpeciesOrders, SampleSpecies %in% targetSamples)
tmp2 <- subset(tmp1, Endemism != "unknown")
View(tmp2)
library(dplyr)
rbleCount <- filter(tmp2, SampleSpecies == "RBLE")
rble <- filter(tmp2, SampleSpecies == "RBLE")
rm(rbleCount)
rble$percObs <- (rbleCount$freq)/rbleCount*100
rble$percObs <- (rble$freq)/rbleCount*100
View(rble)
rble$percObs <- (rble$freq)/rble*100
rble <- filter(tmp2, SampleSpecies == "RBLE")
rble$percObs <- (rble$freq)/rble*100
rble <- filter(tmp2, SampleSpecies == "RBLE")
filter(tmp2, SampleSpecies == "RBLE", Endemism == "Native")
rbleNative <- filter(tmp2, SampleSpecies == "RBLE", Endemism == "Native")
rbleExotic <- filter(tmp2, SampleSpecies == "RBLE", Endemism == "Exotic")
View(rbleExotic)
rbleNatve_count <- sum(rbleNative$freq)
rbleNative$percObs <- (rbleNative$freq)/rbleNative_count*100
rbleNative$percObs <- (rbleNative$freq)/rbleNatve_count*100
View(rbleNative)
rbleExotic <- filter(tmp2, SampleSpecies == "RBLE", Endemism == "Exotic")
rbleExotic_count <- sum(rbleExotic$freq)
rbleExotic$percObs <- (rbleExotic$freq)/rbleExotic_count*100
jabwNative <- filter(tmp2, SampleSpecies == "JABW", Endemism == "Native")
jabwNative_count <- sum(jabwNative$freq)
jabwNative$percObs <- (jabwNative$freq)/jabwNatve_count*100
jabwExotic <- filter(tmp2, SampleSpecies == "JABW", Endemism == "Exotic")
jabwExotic_count <- sum(jabwExotic$freq)
jabwNative_count <- sum(jabwNative$freq)
jabwNative$percObs <- (jabwNative$freq)/jabwNatve_count*100
jabwNative$percObs <- (jabwNative$freq)/jabwNative_count*100
jabwExotic <- filter(tmp2, SampleSpecies == "JABW", Endemism == "Exotic")
jabwExotic_count <- sum(jabwExotic$freq)
jabwExotic$percObs <- (jabwExotic$freq)/jabwExotic_count*100
rbleNative <- filter(tmp2, SampleSpecies == "RBLE", Endemism == "Native")
rbleNative_count <- sum(rbleNative$freq)
rbleNative$percObs <- (rbleNative$freq)/rbleNative_count*100
rbleExotic <- filter(tmp2, SampleSpecies == "RBLE", Endemism == "Exotic")
rbleExotic_count <- sum(rbleExotic$freq)
rbleExotic$percObs <- (rbleExotic$freq)/rbleExotic_count*100
jabwNative <- filter(tmp2, SampleSpecies == "JABW", Endemism == "Native")
jabwNative_count <- sum(jabwNative$freq)
jabwNative$percObs <- (jabwNative$freq)/jabwNative_count*100
jabwExotic <- filter(tmp2, SampleSpecies == "JABW", Endemism == "Exotic")
jabwExotic_count <- sum(jabwExotic$freq)
jabwExotic$percObs <- (jabwExotic$freq)/jabwExotic_count*100
jaweNative <- filter(tmp2, SampleSpecies == "JAWE", Endemism == "Native")
jaweNative_count <- sum(jaweNative$freq)
jaweNative$percObs <- (jaweNative$freq)/jaweNative_count*100
jaweExotic <- filter(tmp2, SampleSpecies == "JAWE", Endemism == "Exotic")
jaweExotic_count <- sum(jaweExotic$freq)
jaweExotic$percObs <- (jaweExotic$freq)/jaweExotic_count*100
tmp3 <- rbind(rbleNative, rbleExotic,
jabwNative, jabwExotic,
jaweNative, jaweExotic)
ggplot(data=tmp3, aes(x = factor(SampleSpecies), y = percObs, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free")
length(unique(tmp3$order_name))
unique(tmp3$order_name
ggplot(data=tmp3, aes(x = factor(SampleSpecies), y = percObs, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol28rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines")) +
labs(title = "Relative proportions of detections of taxonomic Orders among Hawaiian bird species guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Percent of taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
######     Part 5b - ordination viz     ######
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
##not run: master.df <- read.csv('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/Routput/master.csv', header = T)
## make OTUtable from master, then filter out OTUs occurring less than 5 of fewer samples (remove rareish things)
detach("package:data.table", unload=TRUE)
library(reshape2)
## make the table
otu.df <- master.df[,c(1,2,13)]
otu.mat <- dcast(otu.df, SampleID ~ OTUid, value.var = "CountReads")
row.names(otu.mat) <- otu.mat$SampleID
otu.mat$SampleID <- NULL
otu.mat[is.na(otu.mat)] <- 0  ## replace NA with zero
otu.mat[otu.mat > 0] = 1
## filter the table
detach("package:data.table", unload=TRUE)
otu.mat = otu.mat[,colSums(otu.mat) > 4]  ## OTU must exist in at least 5 samples
otufilt.mat = otu.mat[rowSums(otu.mat) > 0,] ## removes empty rows from filtering above
## extreme filtering - keeping only samples existing in at least 10% of samples
otufilt10.mat = otu.mat[,colSums(otu.mat) > 10]  ## OTU must exist in at least 5 samples
otufilt10.mat = otufilt10.mat[rowSums(otufilt10.mat) > 0,] ## removes empty rows from filtering above
## create a metadata table with sample information
samplemeta.df <- unique(master.df[,c(1,15:19)])
## creating a tree is more involved... see notes in Part6 below
## vegan Ordination
library(vegan)
## 1) calculate distance:
draup <- vegdist(otufilt.mat, method="raup", binary=TRUE)
draup10 <- vegdist(otufilt10.mat, method="raup", binary=TRUE)
# notrun: dbray <- vegdist(otutable.mat, method="bray", binary=TRUE)
# notrun: djacc <- vegdist(otutable.mat, method="jaccard", binary=TRUE)
## 2) ordinate
NMDSraup <- metaMDS(draup, distance = "raup", k = 2, trymax=1000)
NMDSraup10 <- metaMDS(draup10, distance = "raup", k = 2, trymax=200)
## 3) look at stress plot
stressplot(NMDSraup)
stressplot(NMDSraup10)
## 4) quick plot
plot(NMDSraup)
plot(NMDSraup10)
## see: https://chrischizinski.github.io/rstats/vegan-ggplot2/
## see also: https://jonlefcheck.net/2012/10/24/nmds-tutorial-in-r/
data.scores <- as.data.frame(scores(NMDSraup))  #Using the scores function from vegan to extract the site scores and convert to a data.frame
data.scores$site <- rownames(data.scores)  # create a column of site names, from the rownames of data.scores
colnames(data.scores) <- c("NMDS1", "NMDS2", "SampleID")
ord.df <- merge(data.scores, samplemeta.df, all.x = TRUE)
## now we can use ggplot to make this better:
library(ggplot2)
## ordination where point shapes are 'Endemism' factor; point color is 'SampleType' factor
o <- ggplot(data = ord.df, aes(x = NMDS1, y = NMDS2, shape = Endemism, color = SampleType))
p1 <- o + geom_point() + scale_color_manual(values = c("red", "blue")) +
theme(legend.position = "bottom") +
guides(ncol = 2, keywidth = 2, keyheight = 2) +
labs(shape="Endemic status", color="Sample Type")
p1
## ordination where point shapes are 'SampleType' factor; point color is 'Endemism' factor
orev <- ggplot(data = ord.df, aes(x = NMDS1, y = NMDS2, shape = SampleType, color = Endemism))
p2 <- orev + geom_point() + scale_color_manual(values = c("red", "blue")) +
theme(legend.position = "bottom") +
guides(ncol = 2, keywidth = 2, keyheight = 2) +
labs(shape="Sample Type", color="Endemic status")
p2
##not run: install.packages("egg")
library(egg)
## see more here: https://cran.r-project.org/web/packages/egg/vignettes/Ecosystem.html
## and even more here: https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html
grid.arrange(p1, p2, nrow = 1,
top = "Hawaiian arthropod composition are distinguished by collection type, not endemic status \n
Nonmetric Multidimensional Scaling (NMDS) of Raup-Crick dissimilarity index")
## how about adding fill into background by Source location?
#unused plot colors for BirdSpecies: plotcolors <- c("#979d00", "#b78e6b","#8e9a67","#ede437","#7e400b","#ff473d","#455a0a","#cfc395","#98ad5a")
#determined bird species from this list: http://www.wec.ufl.edu/birds/SurveyDocs/species_list.pdf
o2 <- ggplot(ord.df) +
geom_polygon(data=ord.df,aes(x = NMDS1, y = NMDS2, fill=Endemism, group=Endemism),alpha=0.40) +  # add area fill
geom_point(data=ord.df,aes(x = NMDS1, y = NMDS2, shape= SampleSpecies, colour= SampleType),size=1.75) +  # add the point markers
scale_colour_manual(values = c("red", "blue")) +
scale_shape_manual(values = c(0,1,16,2,5,6,3,11,4)) +
scale_fill_manual(values = c("#48b8da", "#0d353f", "#ffda00", "#b55251", "#dfb137", "#80e34b")) +
labs(title = "Hawaiian arthropod composition are distinguished by collection type",
subtitle = "Nonmetric Multidimensional Scaling (NMDS) of Raup-Crick dissimilarity index")
o2
## a related attmept from this site:https://jonlefcheck.net/2012/10/24/nmds-tutorial-in-r/comment-page-1/
ordiplot(NMDSraup,type="n")
with(ord.df, ordihull(NMDSraup,groups=Endemism,draw="polygon",col=c("grey90", "blue"),label=F,alpha = 0.3))
with(ord.df, orditorp(NMDSraup,display="sites",col="red",air=0.01))
with(ord.df, orditorp(NMDSraup,display="species",col=c(rep("green",5),rep("blue",5)),air=0.01,cex=1.25))
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
######     UNUSED: Part 6 - Phyloseq plots     ######
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
## load in original OTUtable from amptk output:
library(data.table)
setwd("~/Repos/guano/OahuBird/")
master.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/Routput/master.csv', header = T)
master.df$SampleID <- gsub("\\.", "-", master.df$SampleID)
h_otutable.df <- fread('https://raw.githubusercontent.com/devonorourke/guano/master/OahuBird/data/amptk/OahuBird_h.otu_table.taxonomy.txt')
row.names(h_otutable.df) <- h_otutable.df$`#OTU ID`
## make a list of samples remaining in our filtered, meta-data included `master.df`:
samplelist <- unique(master.df$SampleID)
## then pick out just the columns in the original OTUtable from that list:
otutable.df <- subset(h_otutable.df, select = samplelist)
row.names(otutable.df) <- row.names(h_otutable.df)
## sum up the rows and drop any OTUs where there are zero read counts; drop the rowsum and names columns after that
otutable.df$rowsums <- rowSums(otutable.df[1:184])
otutable.df$rowsums
otutable.df$names <- rownames(otutable.df)
otutable.df <- subset(otutable.df, rowsums != 0)
row.names(otutable.df) <- otutable.df$names
otutable.df$names <- NULL
otutable.df$rowsums <- NULL
## convert to binary matrix
otutable.mat <- as.matrix((otutable.df > 0) + 0)
# this is what you'll load into phyloseq as 'OTU'
## Generate a taxonomy table
tax.df <- unique(master.df[,c(2,6:12)])
rownames(tax.df) <- tax.df$OTUid
tax.df$OTUid <- NULL
colnames(tax.df) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
tax.mat <- as.matrix(tax.df)
row.names(tax.mat) <- rownames(tax.df)
# this is what you'll load into phyloseq as 'TAX'
## Add additional sample metadata:
## found that Alissa had entered two unique values for sample OahuBird.184... so the first one was arbitrarily dropped
metaps.df <- unique(master.df[,c(1,15:19)])
metaps.df <- metaps.df[c(1:45, 47:185),]
rownames(metaps.df) <- metaps.df$SampleID
# this is what you'll load into phyloseq as 'META'
## save files to disk:
setwd("~/Repos/guano/OahuBird/data/Routput/")
write.table(otutable.mat, file = "otutable.mat", row.names = TRUE, sep = "\t")
write.table(tax.mat, file = "tax.mat", row.names = TRUE, sep = "\t")
write.table(metaps.df, file = "metaps.df", row.names = TRUE, sep = "\t")
## load package `phyloseq`
## notrun: source('http://bioconductor.org/biocLite.R')
## notrun: biocLite('phyloseq')
## notrun: source("http://bioconductor.org/biocLite.R")
## not run: biocLite("multtest")
## not run: install.packages("ape")
#! not installed: source("http://bioconductor.org/biocLite.R")
#! not installed: biocLite("BiocUpgrade")
library(phyloseq)
unique(tmp3$order_name)
unique(plot.df$order_name)
levels(plot.df$order_name)
levels(tmp3$order_name)
unique(tmp3$order_name)
tol25rainbow= c("#771155", "#AA4488", "#CC99BB", "#f7e9f7",
"#114477", "#77AADD", "#e2effd",
"#117777", "#44AAAA", "#77CCCC", "#d9f0f0",
"#117744", "#44AA77", "#88CCAA", "#e0f0e6",
"#777711", "#AAAA44", "#DDDD77", "#eaeedf",
"#774411", "#DDAA77", "#f6ebdd",
"#AA4455", "#DD7788", "#fee8e3")
ggplot(data=tmp3, aes(x = factor(SampleSpecies), y = percObs, fill = order_name)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = tol25rainbow, na.value="black") +
facet_grid(~ Endemism,  scales = "free_x", space = "free") +
theme(panel.spacing = unit(2, "lines")) +
labs(title = "Relative proportions of detections of taxonomic Orders among Hawaiian bird species guano",
subtitle = "Taxonomic order defined using approaches described in 'amptk' bioinformatic pipeline\n using Barcode of Life Database references",
x = "Bird Species",
y = "Percent of taxonomic Order detected") +
guides(fill = guide_legend(title = "Taxonomic Order", ncol = 2, keywidth = 2, keyheight = 2)) +
theme(legend.position = "right", axis.text.y=element_blank(), axis.ticks.y = element_blank())
